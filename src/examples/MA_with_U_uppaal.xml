<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>clock c;urgent chan c_ts;
urgent chan c_tv;
urgent chan c_ta;
urgent chan c_r;
urgent chan c_m;
urgent chan c_ea;
double v_ts;
clock v_tv;
clock v_ta;
double v_m;
double v_ea;
const int PERIOD=2;
const int MAsize=3;
const int SR=3;
const int b=1;
const int start=0;
const int SB_Rate=-8;
const int EB_Rate=-10;
const double PI = 3.1415926;

double normal_random()
{
double u = random(1);
double v = random(1);
double x = sqrt((-2) * ln(u)) * cos(2 * PI * v);
if(x&lt;0){return x*-1;}else{ return x;}}
double Normal(double mu, double sigma){
    double u = random(1);
    double v = random(1);
    double x = sqrt((-2) * ln(u)) * cos(2 * PI * v);
    double ret =  x*sigma + mu;
    if(ret&lt;0)
        return ret*-1;
else
    return ret;
}

double a_strategy(){
    return  1.0;
}</declaration>

<template>
<name>Train</name>
<declaration>

void initialize(){
 }double s;
clock v;
clock a;
clock t;
double fr;
</declaration>
<location id="id1">
<name>Train</name>
<label kind="invariant">s'==v&amp;&amp; v'==a+fr&amp;&amp; t'==1 </label>
</location>

<location id="id2">
<name>int0</name>
<label kind="invariant">s'==v&amp;&amp; v'==a+fr&amp;&amp; t'==1 </label>
</location>

<location id="id3">
<name>int1</name>
<label kind="invariant">s'==v&amp;&amp; v'==a+fr&amp;&amp; t'==1 </label>
</location>

<location id="id4">
<name>RunningTrain</name>
<label kind="invariant"> </label>
<urgent/>
</location>

<init ref="id4"/>

<!--  -->
<transition>
<source ref="id1"/>
<target ref="id2"/>
<label kind="synchronisation">c_ts!</label>
<label kind="guard" ></label>
<label kind="assignment">v_ts=s </label>
</transition>

<!--  -->
<transition>
<source ref="id2"/>
<target ref="id3"/>
<label kind="synchronisation">c_tv!</label>
<label kind="guard" ></label>
<label kind="assignment">v_tv=v </label>
</transition>

<!--  -->
<transition>
<source ref="id3"/>
<target ref="id1"/>
<label kind="synchronisation">c_ta?</label>
<label kind="guard" ></label>
<label kind="assignment">a= v_ta </label>
</transition>

<!--  -->
<transition>
<source ref="id4"/>
<target ref="id1"/>
<label kind="guard" ></label>
<label kind="assignment">v=0, v=0, v=0,initialize() </label>
</transition>

</template>


<template>
<name>RBC</name>
<declaration>

void initialize(){
 }
double r_delay;
clock d_t;
</declaration>
<location id="id1">
<name>M</name>
<label kind="invariant"> </label>
</location>

<location id="id2">
<name>EA</name>
<label kind="invariant"> </label>
</location>

<location id="id3">
<name>R</name>
<label kind="invariant"> </label>
<urgent/>
</location>

<location id="id4">
<name>temp0</name>
<label kind="invariant"> d_t &lt;=r_delay </label>
</location>

<init ref="id1"/>

<!--  -->
<transition>
<source ref="id1"/>
<target ref="id2"/>
<label kind="synchronisation">c_m?</label>
<label kind="guard" ></label>
<label kind="assignment">m= v_m </label>
</transition>

<!--  -->
<transition>
<source ref="id2"/>
<target ref="id3"/>
<label kind="synchronisation">c_ea?</label>
<label kind="guard" ></label>
<label kind="assignment">ea= v_ea </label>
</transition>

<!--  -->
<transition>
<source ref="id4"/>
<target ref="id1"/>
<label kind="synchronisation">c_r!</label>
<label kind="guard" >d_t &gt;=r_delay</label>
<label kind="assignment">v_r=r </label>
</transition>

<!--  -->
<transition>
<source ref="id3"/>
<target ref="id4"/>
<label kind="guard" ></label>
<label kind="assignment">d_t=0,r_delay=Normal(0.1,0.05) </label>
</transition>

</template>


<template>
<name>controller</name>
<declaration>

void initialize(){
 }double i;
double b;
clock v;
double s;
double e;
double iMA;
double iSeg;
clock xl;
</declaration>
<location id="id1">
<name>READY</name>
<label kind="invariant"> </label>
</location>

<location id="id2">
<name>GMA</name>
<label kind="invariant"> </label>
</location>

<location id="id3">
<name>CMA</name>
<label kind="invariant"> </label>
<committed/>
</location>

<location id="id4">
<name>RETRY</name>
<label kind="invariant"> </label>
<committed/>
</location>

<location id="id5">
<name>MFR</name>
<label kind="invariant"> </label>
</location>

<location id="id6">
<name>CMF</name>
<label kind="invariant"> </label>
<committed/>
</location>

<location id="id7">
<name>SBI</name>
<label kind="invariant"> </label>
</location>

<location id="id8">
<name>CSB</name>
<label kind="invariant"> </label>
<committed/>
</location>

<location id="id9">
<name>EBI</name>
<label kind="invariant"> </label>
</location>

<location id="id10">
<name>STOP</name>
<label kind="invariant"> </label>
</location>

<location id="id11">
<name>tmp_loc_1</name>
<label kind="invariant"> </label>
</location>

<location id="id12">
<name>tmp_loc_1</name>
<label kind="invariant"> </label>
</location>

<location id="id13">
<name>tmp_loc_1</name>
<label kind="invariant"> </label>
</location>

<init ref="id1"/>

<!-- null -->
<transition>
<source ref="id1"/>
<target ref="id2"/>
<label kind="synchronisation">c_r!</label>
<label kind="guard" ></label>
<label kind="assignment">v_r= </label>
</transition>

<!-- null -->
<transition>
<source ref="id2"/>
<target ref="id11"/>
<label kind="synchronisation">c_m?</label>
<label kind="guard" ></label>
<label kind="assignment">iMA= v_m </label>
</transition>

<!-- tmp_tans_1 -->
<transition>
<source ref="id11"/>
<target ref="id3"/>
<label kind="synchronisation">c_ea?</label>
<label kind="guard" ></label>
<label kind="assignment">= v_ea </label>
</transition>

<!-- null -->
<transition>
<source ref="id3"/>
<target ref="id5"/>
<label kind="guard" >iMA!=null</label>
<label kind="assignment">update() </label>
</transition>

<!-- null -->
<transition>
<source ref="id5"/>
<target ref="id12"/>
<label kind="synchronisation">c_tv?</label>
<label kind="guard" ></label>
<label kind="assignment">v= v_tv </label>
</transition>

<!-- tmp_tans_1 -->
<transition>
<source ref="id12"/>
<target ref="id6"/>
<label kind="synchronisation">c_ts?</label>
<label kind="guard" ></label>
<label kind="assignment">= v_ts </label>
</transition>

<!-- null -->
<transition>
<source ref="id6"/>
<target ref="id7"/>
<label kind="synchronisation">c_ta!</label>
<label kind="guard" >ot ((s=CTCS_Properties::start) or ((v &lt; iSeg.v2))) or not ((s=CTCS_Properties::start) or  ((((v**2) + (2*b*s)) &lt; (iMA[nSeg.v2] + (2*b*iSeg.e)))))</label>
<label kind="assignment">v_ta=0.8update() </label>
</transition>

<!-- null -->
<transition>
<source ref="id6"/>
<target ref="id5"/>
<label kind="synchronisation">c_ta!</label>
<label kind="guard" >( (s=CTCS_Properties::start) or ((v &lt; iSeg.v2))) or  (((v**2) + (2*b*s)) &lt; (iMA[nSeg.v2] + (2*b*iSeg.e)))</label>
<label kind="assignment">v_ta=xlupdate() </label>
</transition>

<!-- null -->
<transition>
<source ref="id7"/>
<target ref="id13"/>
<label kind="synchronisation">c_ts?</label>
<label kind="guard" ></label>
<label kind="assignment">s= v_ts </label>
</transition>

<!-- tmp_tans_1 -->
<transition>
<source ref="id13"/>
<target ref="id8"/>
<label kind="synchronisation">c_tv?</label>
<label kind="guard" ></label>
<label kind="assignment">= v_tv </label>
</transition>

<!-- null -->
<transition>
<source ref="id8"/>
<target ref="id5"/>
<label kind="synchronisation">c_ta!</label>
<label kind="guard" >((s=CTCS_Properties::start) or ((v &lt; iSeg.v2))) and ((s=CTCS_Properties::start) or ((((v**2) + (2*b*s)) &lt; (iMA[nSeg.v2] + (2*b*iSeg.e)))))</label>
<label kind="assignment">v_ta=xlupdate() </label>
</transition>

<!-- null -->
<transition>
<source ref="id8"/>
<target ref="id7"/>
<label kind="guard" >not (((s=CTCS_Properties::start) or ((v &lt; iSeg.v2))) and ((s=CTCS_Properties::start) or ((((v**2) + (2*b*s)) &lt; (iMA[nSeg.v2] + (2*b*iSeg.e))))))</label>
<label kind="assignment">update() </label>
</transition>

<!-- null -->
<transition>
<source ref="id3"/>
<target ref="id4"/>
<label kind="guard" >iMA=null</label>
<label kind="assignment"> </label>
</transition>

<!-- null -->
<transition>
<source ref="id4"/>
<target ref="id2"/>
<label kind="guard" ></label>
<label kind="assignment">update() </label>
</transition>

<!-- null -->
<transition>
<source ref="id9"/>
<target ref="id10"/>
<label kind="guard" >v==0</label>
<label kind="assignment"> </label>
</transition>

<!-- null -->
<transition>
<source ref="id6"/>
<target ref="id9"/>
<label kind="synchronisation">c_ta!</label>
<label kind="guard" >not (v &lt; iSeg.v1) or not ((((v**2) + (2*b*s)) &lt; (iMA[nSeg.v1] + (2*b*iSeg.e))))</label>
<label kind="assignment">v_ta=bupdate() </label>
</transition>

<!-- null -->
<transition>
<source ref="id7"/>
<target ref="id9"/>
<label kind="synchronisation">c_ta!</label>
<label kind="guard" >not (v &lt; iSeg.v1) or not ((((v**2) + (2*b*s)) &lt; (iMA[nSeg.v1] + (2*b*iSeg.e))))</label>
<label kind="assignment">v_ta=bupdate() </label>
</transition>

</template>

<system> system Train,RBC,controller;</system>
<queries>
<query>
<formula>Pr[&lt;=300](&lt;&gt; v&lt;=0 &amp;&amp;  s&lt;6000 &amp;&amp; s&gt;0</formula>
</query>
</queries>
</nta>
